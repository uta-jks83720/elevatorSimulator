// generated by Fast Light User Interface Designer (fluid) version 1.0308

#ifndef elevatorGUI_h
#define elevatorGUI_h
#include <FL/Fl.H>
#include "elevator.h"
#include "events.h"
#include <string>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Pack.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Light_Button.H>

class UserInterfaceElevator {
public:
  Fl_Double_Window* make_window();
  Fl_Round_Button *currentFloor4;
  Fl_Round_Button *currentFloor3;
  Fl_Round_Button *currentFloor2;
  Fl_Output *timeBox;
  Fl_Button *powerButton;
private:
  inline void cb_powerButton_i(Fl_Button*, void*);
  static void cb_powerButton(Fl_Button*, void*);
  inline void cb_obstruct_i(Fl_Check_Button*, void*);
  static void cb_obstruct(Fl_Check_Button*, void*);
public:
  Fl_Round_Button *pos40;
  Fl_Round_Button *pos38;
  Fl_Round_Button *pos36;
  Fl_Round_Button *pos34;
  Fl_Round_Button *pos32;
  Fl_Round_Button *pos30;
  Fl_Round_Button *pos28;
  Fl_Round_Button *pos26;
  Fl_Round_Button *pos24;
  Fl_Round_Button *pos22;
  Fl_Round_Button *pos20;
  Fl_Round_Button *GUI_CAB_POS_2;
  Fl_Round_Button *GUI_CAB_POS_3;
  Fl_Round_Button *GUI_CAB_POS_4;
  Fl_Button *GUI_REQ_FLOOR_2;
private:
  inline void cb_GUI_REQ_FLOOR_2_i(Fl_Button*, void*);
  static void cb_GUI_REQ_FLOOR_2(Fl_Button*, void*);
public:
  Fl_Button *GUI_REQ_FLOOR_3;
private:
  inline void cb_GUI_REQ_FLOOR_3_i(Fl_Button*, void*);
  static void cb_GUI_REQ_FLOOR_3(Fl_Button*, void*);
public:
  Fl_Button *GUI_REQ_FLOOR_4;
private:
  inline void cb_GUI_REQ_FLOOR_4_i(Fl_Button*, void*);
  static void cb_GUI_REQ_FLOOR_4(Fl_Button*, void*);
public:
  Fl_Output *GUI_REQ_FLOOR_ACCEPTED_2;
  Fl_Output *GUI_REQ_FLOOR_ACCEPTED_3;
  Fl_Output *GUI_REQ_FLOOR_ACCEPTED_4;
  Fl_Progress *GUI_DOOR_POSITION;
private:
  inline void cb_DOOR_i(Fl_Button*, void*);
  static void cb_DOOR(Fl_Button*, void*);
public:
  Fl_Light_Button *GUI_CALL_ACCEPTED_FLOOR_2;
private:
  inline void cb_GUI_CALL_ACCEPTED_FLOOR_2_i(Fl_Light_Button*, void*);
  static void cb_GUI_CALL_ACCEPTED_FLOOR_2(Fl_Light_Button*, void*);
public:
  Fl_Output *GUI_UPPTAGEN_FLOOR_2;
  Fl_Light_Button *GUI_CALL_ACCEPTED_FLOOR_3;
private:
  inline void cb_GUI_CALL_ACCEPTED_FLOOR_3_i(Fl_Light_Button*, void*);
  static void cb_GUI_CALL_ACCEPTED_FLOOR_3(Fl_Light_Button*, void*);
public:
  Fl_Output *GUI_UPPTAGEN_FLOOR_3;
  Fl_Light_Button *GUI_CALL_ACCEPTED_FLOOR_4;
private:
  inline void cb_GUI_CALL_ACCEPTED_FLOOR_4_i(Fl_Light_Button*, void*);
  static void cb_GUI_CALL_ACCEPTED_FLOOR_4(Fl_Light_Button*, void*);
public:
  Fl_Output *GUI_UPPTAGEN_FLOOR_4;
  void guiTick();
};
#endif
